#!/bin/bash

#            --------------------------------------------------
#                            hacktestkit Utilities          
#            --------------------------------------------------
#                  Copyright (C) <2015>  <Entynetproject>
#
#        This program is free software: you can redistribute it and/or modify
#        it under the terms of the GNU General Public License as published by
#        the Free Software Foundation, either version 3 of the License, or
#        any later version.
#
#        This program is distributed in the hope that it will be useful,
#        but WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#        GNU General Public License for more details.
#
#        You should have received a copy of the GNU General Public License
#        along with this program.  If not, see <http://www.gnu.org/licenses/>.

CE="\033[0m"
RS="\033[1;31m"
YS="\033[1;33m"
N="\033[1;37m"

if [[ $EUID -ne 0 ]]
then
   sleep 1
   echo -e "["$RS"*"$CE"] "$RS"This script must be run as "$YS"root"$RS"!"$CE"" 1>&2
   sleep 1
   exit
fi

if [[ $1 = "--help" || $1 = "-h" ]]
then
echo -e "Usage: ehtmod [OPTION...]"
echo -e "Copyright (C) 2015, Entynetproject. All Rights Reserved."
echo -e
echo -e "   -i  --install         Install hacktestkit modules."
echo -e "   -t  --take    <name>  Take a new hacktestkit modules snapshot."
echo -e "   -r  --restore <name>  Restore saved hacktestkit modules snapshot."
echo -e "   -d  --delete  <name>  Delete saved hacktestkit modules snapshot."
echo -e "   -u  --uninstall       Uninstall hacktestkit modules from."
echo -e "   -h  --help            Give this help list."
exit

elif [[ $1 = "--restore" || $1 = "-r" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: ehtmod $1 <name>"
exit
fi
if [[ -d /etc/hacktestkit/modules ]]
then
if [[ ! -d /etc/hacktestkit/modules/snapshots ]]
then
sleep 2
echo -e "Error, snapshots directory is not found!"
sleep 2
echo -e "Making /etc/hacktestkit/modules/snapshots..."
{
chattr -i /etc/hacktestkit
mkdir /etc/hacktestkit/modules/snapshots
chattr +i /etc/hacktestkit
}
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
fi
if [[ -d /etc/hacktestkit/modules/snapshots/$2 ]]
then
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to restore snapshot:\033[0m $2"
sleep 1
printf '\033]2;Restoring...\a'

function ProgressBark {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rRestoring (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBark ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
{
chatt -i /etc/hacktestkit
rm -r /etc/hacktestkit/modules/eht
cp -r /etc/hacktestkit/modules/snapshots/$2/eht /etc/hacktestkit/modules
chmod +x /etc/hacktestkit/modules/eht/eht1
chmod +x /etc/hacktestkit/modules/eht/eht2
chmod +x /etc/hacktestkit/modules/eht/eht3
chmod +x /etc/hacktestkit/modules/eht/eht31
chmod +x /etc/hacktestkit/modules/eht/eht21
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 2
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
else
sleep 2
echo -e "Error, snapshot $2 is not found!"
sleep 2
exit
fi
else
sleep 2
echo -e "Error, hacktestkit modules is not installed!"
sleep 2
exit
fi

elif [[ $1 = "--delete" || $1 = "-d" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: ehtmod $1 <name>"
exit
fi
if [[ -d /etc/hacktestkit/modules ]]
then
if [[ ! -d /etc/hacktestkit/modules/snapshots ]]
then
sleep 2
echo -e "Error, snapshots directory is not found!"
sleep 2
echo -e "Making /etc/hacktestkit/modules/snapshots..."
{
chattr -i /etc/hacktestkit
mkdir /etc/hacktestkit/modules/snapshots
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
fi
if [[ -d /etc/hacktestkit/modules/snapshots/$2 ]]
then
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to delete snapshot:\033[0m $2"
sleep 1
printf '\033]2;Deleting...\a'

function ProgressBarkt {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rDeleting (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarkt ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
{
chattr -i /etc/hacktestkit
rm -rf /etc/hacktestkit/modules/snapshots/$2
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 2
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
else
sleep 2
echo -e "Error, snapshot $2 is not found!"
sleep 2
exit
fi
else
sleep 2
echo -e "Error, hacktestkit modules is not installed!"
sleep 2
exit
fi

elif [[ $1 = "--take" || $1 = "-t" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: ehtmod $1 <name>"
exit
fi
if [[ -d /etc/hacktestkit/modules ]]
then
if [[ ! -d /etc/hacktestkit/modules/snapshots ]]
then
sleep 2
echo -e "Error, snapshots directory is not found!"
sleep 2
echo -e "Making /etc/hacktestkit/modules/snapshots..."
{
chattr -i /etc/hacktestkit
mkdir /etc/hacktestkit/modules/snapshots
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
fi
if [[ -d /etc/hacktestkit/modules/snapshots/$2 ]]
then
sleep 2
echo -e "Error, snapshot $2 is already taken!"
sleep 2
exit
else
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to take snapshot:\033[0m $2"
sleep 1
printf '\033]2;Taking...\a'

function ProgressBarks {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rTaking (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarks ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
echo -e "Making /etc/hacktestkit/modules/snapshots/$2..."
{
chattr -i /etc/hacktestkit
mkdir /etc/hacktestkit/modules/snapshots/$2
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "Trying to take snapshot of /etc/hacktestkit/modules/eht..."
{
chattr -i /etc/hacktestkit
cp -r /etc/hacktestkit/modules/eht /etc/hacktestkit/modules/snapshots/$2
chmod +t /etc/hacktestkit/modules/snapshots
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Snapshot: \033[4;32m/etc/hacktestkit/modules/snapshots/$2/eht\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
fi
else
sleep 2
echo -e "Error, hacktestkit modules is not installed!"
sleep 2
exit
fi

elif [[ $1 = "--uninstall" || $1 = "-u" ]]
then
if [[ -d /etc/hacktestkit/modules ]]
then
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to uninstall\033[0m"
sleep 1
printf '\033]2;Uninstalling...\a'

function ProgressBarkty {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rUninstalling (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBarkty ${number} ${_end}
done

sleep 5
echo -e
sleep 0.3
{
chattr -i /etc/hacktestkit
rm -rf /etc/hacktestkit/modules
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 2
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
else
sleep 2
echo -e "Error, hacktestkit modules is not installed!"
sleep 2
exit
fi


elif [[ $1 = "--install" || $1 = "-i" ]]
then
if [[ -d /etc/hacktestkit/modules ]]
then
sleep 2
echo -e "Error, hacktestkit modules is already installed!"
sleep 2
exit
fi
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "Making /etc/hacktestkit/modules..."
{
chattr -i /etc/hacktestkit
mkdir /etc/hacktestkit/modules
mkdir /etc/hacktestkit/modules/eht
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mPreparing to install...\033[0m"
sleep 1
printf '\033]2;Installing...\a'

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rInstalling (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

sleep 5
echo -e
sleep 0.3
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
chmod +x /root/hacktestkit/eht/eht1
chmod +x /root/hacktestkit/eht/eht2
chmod +x /root/hacktestkit/eht/eht3
chmod +x /root/hacktestkit/eht/eht21
chmod +x /root/hacktestkit/eht/eht31
sleep 0.5 
echo -e "Setting up permissions..."
sleep 0.5
echo -e "Moving hacktestkit modules to /etc/hacktestkit/modules/eht..."
sleep 0.5
{
chattr -i /etc/hacktestkit
cp /root/hacktestkit/eht/eht1 /etc/hacktestkit/modules/eht
cp /root/hacktestkit/eht/eht2 /etc/hacktestkit/modules/eht
cp /root/hacktestkit/eht/eht3 /etc/hacktestkit/modules/eht
cp /root/hacktestkit/eht/eht21 /etc/hacktestkit/modules/eht
cp /root/hacktestkit/eht/eht31 /etc/hacktestkit/modules/eht
chmod +x /etc/hacktestkit/modules/eht/eht1
chmod +x /etc/hacktestkit/modules/eht/eht2
chmod +x /etc/hacktestkit/modules/eht/eht3
chmod +x /etc/hacktestkit/modules/eht/eht21
chmod +x /etc/hacktestkit/modules/eht/eht31
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "hacktestkit modules moved to /etc/hacktestkit/modules/eht with success!"
sleep 1
echo -e "Cleaning caches..."
sleep 3
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Saving to /etc/hacktestkit/modules/.config..."
echo eht1 >> /etc/hacktestkit/modules/.config
echo eht2 >> /etc/hacktestkit/modules/.config
echo eht3 >> /etc/hacktestkit/modules/.config
echo eht21 >> /etc/hacktestkit/modules/.config
echo eht31 >> /etc/hacktestkit/modules/.config
sleep 0.5
echo -e "Saved to /etc/hacktestkit/modules/.config..."
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 3
echo -e "\033[4;32mPreparing to take snapshot:\033[0m default_snapshot"
sleep 1
echo -e "Making /etc/hacktestkit/modules/snapshots..."
mkdir /etc/hacktestkit/modules/snapshots
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
printf '\033]2;Taking...\a'

function ProgressBarksa {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rTaking (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarksa ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
echo -e "Making /etc/hacktestkit/modules/snapshots/default_snapshot..."
{
chattr -i /etc/hacktestkit
mkdir /etc/hacktestkit/modules/snapshots/default_snapshot
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "Trying to take snapshot of /etc/hacktestkit/modules/eht..."
{
chattr -i /etc/hacktestkit
cp -r /etc/hacktestkit/modules/eht /etc/hacktestkit/modules/snapshots/default_snapshot
chmod +t /etc/hacktestkit/modules/snapshots
chattr +i /etc/hacktestkit
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Snapshot: \033[4;32m/etc/hacktestkit/modules/snapshots/dafault_snapshot/eht\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
fi

echo -e "Usage: ehtmod [OPTION...]"
echo -e "Copyright (C) 2015, Entynetproject. All Rights Reserved."
echo -e
echo -e "   -i  --install         Install hacktestkit modules."
echo -e "   -t  --take    <name>  Take a new hacktestkit modules snapshot."
echo -e "   -r  --restore <name>  Restore saved hacktestkit modules snapshot."
echo -e "   -d  --delete  <name>  Delete saved hacktestkit modules snapshot."
echo -e "   -u  --uninstall       Uninstall hacktestkit modules."
echo -e "   -h  --help            Give this help list."
exit
